version: "3.8"

services:
  db:
    image: postgres:13
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  backend:
    build: ./backend
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://myuser:mypassword@db:5432/mydatabase?sslmode=disable
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"

  data_loader:
    build: ./backend
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://myuser:mypassword@db:5432/mydatabase?sslmode=disable
    entrypoint: ["sh", "-c", "until pg_isready -h db -U myuser; do sleep 1; done && /app/bin/app load_data"]

  python-microservice:
    build:
      context: ./recommendation_system
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./recommendation_system/models:/app/models
      - ./recommendation_system/data:/app/data
      
volumes:
  pgdata:
  pgadmin_data:
