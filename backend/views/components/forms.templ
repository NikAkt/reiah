//This components file is for creating forms
//TODO: Possible abstraction here. Could create a general input component
package components

import "strconv"

type formInput func(l, p, n string) templ.Component

templ textField(label, placeholder, name string) {
<label class="block mb-4">
  <span class="text-accent text-sm mb-2 dark:text-slate-200">{ label }</span>
  <input
    class="shadow appearance-none border rounded w-full p-3 text-accent leading-tight focus:outline-none focus:shadow-outline dark:bg-slate-800 dark:text-slate-200"
    type="text" placeholder={ placeholder } name={ name } />
</label>
}

templ passwordField(label, placeholder, name string) {
<label class="block mb-4">
  <span class="text-accent text-sm mb-2 dark:text-slate-200">{ label }</span>
  <input
    class="shadow appearance-none border rounded border-slate-300 w-full p-3 text-accent leading-tight focus:outline-none focus:shadow-outline dark:bg-slate-800 dark:text-slate-200"
    type="password" placeholder={ placeholder } name={ name } />
</label>
}

templ emailField(label, placeholder, name string) {
<label class="block mb-4">
  <span class="text-accent text-sm mb-2 dark:text-slate-200">{ label }</span>
  <input
    class="shadow appearance-none border rounded border-slate-300 w-full p-3 text-accent leading-tight focus:outline-none focus:shadow-outline dark:bg-slate-800 dark:text-slate-200"
    type="email" placeholder={ placeholder } name={ name } />
</label>
}

templ numberField(label, placeholder, name string) {
<label class="block mb-4">
  <span class="text-accent text-sm mb-2 dark:text-slate-200">{ label }</span>
  <input max="180" min="-180" step="0.0001"
    class="shadow appearance-none border rounded border-slate-300 w-full p-3 text-accent leading-tight focus:outline-none focus:shadow-outline dark:bg-slate-800 dark:text-slate-200"
    type="number" placeholder={ placeholder } name={ name } />
</label>
}

templ inputGroup(gs int) {
<div class={ "grid gap-2 grid-cols-" + strconv.Itoa(gs) }>
  { children... }
</div>
}

templ SettingsForm() {
<form autocomplete="off" hx-put={ "/settings/" + ctx.Value("userid").(string) }>
  @inputGroup(3) {
  @textField("Name", "Name", "name")
  @textField("Surname", "Surname", "surname")
  @textField("Username", "Username", "username")
  }
  @inputGroup(3) {
  @emailField("Email", "Email", "email")
  }
  <div class="mt-6 grid grid-cols-3 gap-2">
    <div class="col-start-3 grid gap-2">
      <button
        class="w-full bg-teal-500 dark:bg-teal-300 hover:bg-green-200 dark:hover:bg-green-950 text-white dark:text-black font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
        Update
      </button>
    </div>
  </div>
</form>
}
